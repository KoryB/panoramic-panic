<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Window Manager

ww = window_get_width();
wh = window_get_height();

wx1 = window_get_x()
wy1 = window_get_y()

wx2 = wx1 + window_get_width()
wy2 = wy1 + window_get_height()

wdx = 0;
wdy = 0;

old_mouse_x = display_mouse_get_x();
old_mouse_y = display_mouse_get_y();

view = 0;
state = "follow"
tweenT = 0

surf_post = surface_create(ww, wh);
application_surface_draw_enable(false)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Snap Window to Ball

if (state == "follow")
{
    var twx1 = wx1;
    var twy1 = wy1;
    var twx2 = wx2;
    var twy2 = wy2;
    
    with (obj_Ball)
    {
        show_debug_message("ball pos: " + string(x) + ", " + string(y))
        
        if (twx1 &gt; bbox_left) 
        {
            twx1 = bbox_left;
            twx2 = bbox_left + window_get_width();
        }
        if (twx2 &lt; bbox_right)
        {
            twx1 = bbox_right - window_get_width();
            twx2 = bbox_right;
        }
        
        if (twy1 &gt; bbox_top)
        {
            twy1 = bbox_top;
            twy2 = bbox_top + window_get_height();
        }
        if (twy2 &lt; bbox_bottom)
        {
            twy1 = bbox_bottom - window_get_height();
            twy2 = bbox_bottom;
        }
    }
    
    wx1 = twx1;
    wy1 = twy1;
    wx2 = twx2;
    wy2 = twy2;
    
    wdx = wx1 - window_get_x();
    wdy = wy1 - window_get_y();
    
    window_set_position(wx1, wy1);
}

scr_window_update_view();

if (!surface_exists(surf_post))
{
    surf_post = surface_create(view_wport[0], view_hport[0]);
}
else
{
    surface_resize(surf_post, view_wport[0], view_hport[0]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Window Manager Pre Update

if (state == "follow")
{
    var mx = display_mouse_get_x();
    var my = display_mouse_get_y();
    
    if (mouse_check_button_pressed(mb_left)) 
    {
        old_mouse_x = mx;
        old_mouse_y = my;
    }
    
    if (mouse_check_button(mb_left) &amp;&amp; (old_mouse_x != mx || old_mouse_y != my)) 
    {
        var dx = mx - old_mouse_x;
        var dy = my - old_mouse_y;
        old_mouse_x = mx;
        old_mouse_y = my;
        scr_window_move(dx, dy)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Tween

if (state == "tween")
{
    if (tweenT &gt;= 1) 
    {
        instance_activate_object(obj_Ball);
        application_surface_draw_enable(true);
        
        wx1 = window_get_x();
        wy1 = window_get_y();
        wx2 = wx1 + ww;
        wy2 = wy1 + wh;
        scr_window_update_view();
        state = "follow"
        
        exit;
    }
    
    if (tweenT &lt;= 0.333)
    {
        var cx = display_get_width() / 2
        var cy = display_get_height() / 2
        
        var wx = scr_smoothstep(tweenT*3, wx1, cx - window_get_width()/2);
        var wy = scr_smoothstep(tweenT*3, wy1, cy - window_get_height()/2);
     
        var tww = scr_smoothstep(tweenT*3, ww, room_width);
        var twh = scr_smoothstep(tweenT*3, wh, room_height);
           
        window_set_position(wx, wy);
        window_set_size(tww, twh);
    }
    else if (tweenT &gt;= .666)
    {
        var cx = display_get_width() / 2
        var cy = display_get_height() / 2
        
        var wx = scr_smoothstep((tweenT - .666)*3, cx - window_get_width()/2, cx - ww/2);
        var wy = scr_smoothstep((tweenT - .666)*3, cy - window_get_height()/2, cy - wh/2);
        
        var tww = scr_smoothstep((tweenT - .666)*3, room_width, ww);
        var twh = scr_smoothstep((tweenT - .666)*3, room_height, wh);
        
        window_set_position(wx, wy);
        window_set_size(tww, twh);
    }
    
    tweenT += 1 / (room_speed*2)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize view

scr_normalize_room();

if (room == rm_Title)
{
    application_surface_draw_enable(true);
    audio_play_sound(m_world1, 2, true);
}
else
{
    application_surface_draw_enable(false);
    state = "tween";
    
    instance_deactivate_object(obj_Ball);
    tweenT = 0;
    
    wx1 = window_get_x();
    wy1 = window_get_y();
}
 
if (room == rm_credits)
{
    audio_stop_sound(m_world1);
    audio_play_sound(m_credits, 7, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cool shader effect

if (state == "tween")
{
    if (! surface_exists(surf_post))
    {
        surf_post = surface_create(view_wport[0], view_hport[0]);
    }
    
    surface_set_target(surf_post)
        draw_clear_alpha(0,0)
        shader_set(shd_pix_blur)
            var u_params = shader_get_uniform(shd_pix_blur, "u_params");
            var ratio = view_hport[0] / view_wport[0]
            var cw;

            if (tweenT &lt;= 0.5)
            {
                cw = tweenT*2*32
            }
            else
            {
                cw = 2*(-tweenT + 1)*32
            }
                        
            shader_set_uniform_f(u_params, view_wport[0], view_hport[0], cw, cw);
            draw_surface(application_surface,0,0)
        shader_reset()
    surface_reset_target()
    
    surface_set_target(application_surface)
        draw_clear_alpha(0, 0);
        draw_surface(surf_post, 0, 0);
    surface_reset_target();
    
    draw_surface(application_surface, 0, 0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
